{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","services/people.ts","App.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","gender","person","to","slug","sex","classNames","name","PeopleTable","people","selectedSlug","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","loading","setLoading","errorMassage","setErrorMassage","useParams","findParent","peopleList","parentName","find","useEffect","setTimeout","fetch","then","response","json","catch","finally","length","getLinkClass","isActive","App","role","NotFoundPage","Root","path","element","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9c7cce30.chunk.js","sourcesContent":["export const HomePage = () => (\n  <>\n    <h1 className=\"title\">Home Page</h1>\n  </>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nfunction setWomenClass(gender: string) {\n  return classNames({\n    'has-text-danger': gender === 'f',\n  });\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={setWomenClass(person.sex)}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            className={classNames({\n              'has-background-warning': person.slug === selectedSlug,\n            })}\n            data-cy=\"person\"\n            key={person.slug}\n          >\n            <td>\n              {person.slug === selectedSlug ? (\n                <PersonLink\n                  person={person}\n                />\n              ) : (\n                <PersonLink\n                  person={person}\n                />\n              )}\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td\n              className={classNames({\n                'has-text-danger': person.mother,\n              })}\n            >\n              {person.mother ? (\n                <PersonLink\n                  person={person.mother}\n                />\n              ) : (\n                <span>{person.motherName ?? '-'}</span>\n              )}\n            </td>\n\n            <td>\n              {person.father ? (\n                <PersonLink\n                  person={person.father}\n                />\n              ) : (\n                <span>{person.fatherName ?? '-'}</span>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../services/people';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMassage, setErrorMassage] = useState('');\n\n  const { slug } = useParams();\n  const selectedSlug = slug;\n\n  function findParent(peopleList: Person[], parentName: string | null) {\n    return peopleList.find((person) => person.name === parentName);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getPeople()\n        .then(peopleList => {\n          setPeople(peopleList?.map(person => ({\n            ...person,\n            mother: findParent(peopleList, person.motherName),\n            father: findParent(peopleList, person.fatherName),\n          })));\n        })\n        .catch(() => setErrorMassage('Something went wrong'))\n        .finally(() => setLoading(false));\n    }, 1000);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (\n            <Loader />\n          )}\n\n          {!loading && people.length > 0 && (\n            <PeopleTable\n              people={people}\n              selectedSlug={selectedSlug}\n            />\n          )}\n\n          {!loading\n          && !errorMassage\n          && people.length === 0\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {errorMassage && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {errorMassage}\n            </p>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  )\n    .then(response => response.json())\n    .then(people => people);\n}\n","import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames(\n  'navbar-item',\n  { 'navbar-item has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const NotFoundPage = () => (\n  <>\n    <h1 className=\"title\">Page not found</h1>\n  </>\n);\n","import {\n  HashRouter as\n  Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLAnchorElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}