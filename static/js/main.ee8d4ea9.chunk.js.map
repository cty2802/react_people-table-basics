{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/BodyTable/BodyTable.tsx","components/PeopleTable/PeopleTable.tsx","helper.tsx","pages/PeoplePage.tsx","services/people.ts","components/NavBar/NavBar.tsx","App.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","to","slug","classNames","sex","name","BodyTable","selectedSlug","born","died","mother","motherName","father","fatherName","tableHead","PeopleTable","people","map","currentColumn","Date","now","findParent","peopleList","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useParams","isShowTable","length","isPeople","useEffect","fetch","then","response","json","getPeopleWithParents","catch","finally","getLinkClass","isActive","NavBar","App","role","NotFoundPage","Root","path","element","replace","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ee8d4ea9.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nconst FEMALE = 'f';\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === FEMALE,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedSlug: string | undefined,\n};\n\nconst NOT_SET_VALUE = '-';\n\nexport const BodyTable: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      className={classNames({\n        'has-background-warning': slug === selectedSlug,\n      })}\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td\n        className={classNames({\n          'has-text-danger': mother,\n        })}\n      >\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName ?? NOT_SET_VALUE\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink\n            person={father}\n          />\n        ) : (\n          fatherName ?? NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { BodyTable } from '../BodyTable';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nconst tableHead = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHead.map(currentColumn => (\n            <th key={`${currentColumn}_${Date.now()}`}>{currentColumn}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <BodyTable\n            person={person}\n            selectedSlug={selectedSlug}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types';\n\nfunction findParent(peopleList: Person[], parentName: string | null) {\n  return peopleList.find(({ name }) => name === parentName);\n}\n\nexport function getPeopleWithParents(\n  peopleList: Person[],\n) {\n  return peopleList?.map(person => ({\n    ...person,\n    mother: findParent(peopleList, person.motherName),\n    father: findParent(peopleList, person.fatherName),\n  }));\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../services/people';\nimport { getPeopleWithParents } from '../helper';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { slug: selectedSlug } = useParams();\n\n  const isShowTable = !isLoading && !!people.length;\n  const isPeople = !isLoading\n    && !errorMessage\n    && !people.length;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleList => {\n        setPeople(getPeopleWithParents(peopleList));\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isShowTable && (\n            <PeopleTable\n              people={people}\n              selectedSlug={selectedSlug}\n            />\n          )}\n\n          {isPeople\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {errorMessage && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {errorMessage}\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  )\n    .then(response => response.json())\n    .then(people => people);\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => (\n  <>\n    <NavLink\n      className={getLinkClass}\n      to=\"/\"\n    >\n      Home\n    </NavLink>\n\n    <NavLink\n      className={getLinkClass}\n      to=\"/people\"\n    >\n      People\n    </NavLink>\n  </>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavBar />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as\n  Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people/:slug?\" element={<PeoplePage />} />\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLAnchorElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}